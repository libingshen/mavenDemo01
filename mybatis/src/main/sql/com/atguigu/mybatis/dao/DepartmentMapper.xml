<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.atguigu.mybatis.dao.DepartmentMapper">
    <!--public Department getDeptById(Integer id);-->
    <select id="getDeptById" resultType="com.atguigu.mybatis.bean.Department">
        select id,dept_name deptmentName from tbl_dept where id=#{id}
    </select>


    <!-- private Integer id;
    private String deptmentName;
    private List<Employee> emps;-->

    <!--private Integer id;
    private String lastName;
    private String email;
    private String gender;
    private Department dept;-->
    <!--嵌套结果集的方式，使用collection标签定义关联的集合类型的属性封装规则-->
    <resultMap id="MyDept" type="com.atguigu.mybatis.bean.Department">
        <id column="did" property="id"/>
        <result column="dept_name" property="deptmentName"/>
        <!--
            collection定义关联集合类型的属性的封装规则
            ofType:指定集合里面元素的类型
        -->
        <collection property="emps" ofType="com.atguigu.mybatis.bean.Employee">
            <id column="eid" property="id"/>
            <result column="last_name" property="lastName"/>
            <result column="email" property="email"/>
            <result column="gender" property="gender"/>
        </collection>
    </resultMap>

    <!-- 根据部门id查出部门信息，同时查出该部门的员工信息-->
    <!--public Department getDeptByIdPlus(Integer id);-->
    <select id="getDeptByIdPlus" resultMap="MyDept">
        SELECT b.`id` did,b.`dept_name` ,
a.`id` eid,a.`last_name`,a.`email`,a.`gender`
FROM tbl_employee a,tbl_dept b WHERE a.`d_id`=b.`id` AND b.`id`=1
    </select>

    <!---->
    <resultMap id="MyDeptStep" type="com.atguigu.mybatis.bean.Department">
        <id column="id" property="id"/>
        <result column="dept_name" property="deptmentName"/>
        <collection property="emps"
                    select="com.atguigu.mybatis.dao.EmployeeMapperPlus.getEmpByDeptId"
                    column="id"
                    fetchType="lazy"/>
    </resultMap>
    <!--根据部门id查出部门信息，同时查出该部门的员工信息，使用分步查询-->
    <!--public Department getDeptByIdStep(Integer id);-->
    <select id="getDeptByIdStep" resultMap="MyDeptStep">
        select id,dept_name from tbl_dept where id=#{id}
    </select>


    <!-- 扩展：多列的值传递过去：
			将多列的值封装map传递；
			column="{key1=column1,key2=column2}"
		fetchType="lazy"：表示使用延迟加载；
				- lazy：延迟
				- eager：立即
	 -->
</mapper>
