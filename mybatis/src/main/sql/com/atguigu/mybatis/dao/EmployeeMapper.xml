<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
namespace：名称空间
id：唯一标识
resultType：返回值类型
#{id}：从传递过来的参数中取出id值
-->
<!--<mapper namespace="com.atguigu.mybatis.EmployeeMapper">
    <select id="selectEmp" resultType="com.atguigu.mybatis.bean.Employee">
        select id,last_name lastName,email,gender from tbl_employee where id = #{id}
    </select>
</mapper>-->

<!--
<mapper namespace="com.atguigu.mybatis.dao.EmployeeMapper">
    <select id="getEmpById" resultType="com.atguigu.mybatis.bean.Employee">
     select id,last_name lastName,email,gender from tbl_employee where id = #{id}
</select>
</mapper>-->

<mapper namespace="com.atguigu.mybatis.dao.EmployeeMapper">
    <select id="getEmpById" resultType="employee">
        select id,last_name lastName,email,gender from tbl_employee where id = #{id}
    </select>
    <select id="getEmpById" resultType="com.atguigu.mybatis.bean.Employee"
            databaseId="mysql">
        select * from tbl_employee where id = #{id}
    </select>
    <select id="getEmpById" resultType="com.atguigu.mybatis.bean.Employee"
            databaseId="oracle">
        select EMPLOYEE_ID id,LAST_NAME	lastName,EMAIL email
        from employees where EMPLOYEE_ID=#{id}
    </select>

    <!-- parameterType：参数类型，可以省略，
	获取自增主键的值：
		mysql支持自增主键，自增主键值的获取，mybatis也是利用statement.getGenreatedKeys()；
		useGeneratedKeys="true"；使用自增主键获取主键值策略
		keyProperty；指定对应的主键属性，也就是mybatis获取到主键值以后，将这个值封装给javaBean的哪个属性
	-->
    <!--public void addEmp(Employee employee);-->
    <insert id="addEmp" parameterType="com.atguigu.mybatis.bean.Employee" useGeneratedKeys="true" keyProperty="id"
            databaseId="mysql">
        insert into tbl_employee(last_name,email,gender)
        VALUES (#{lastName},#{email},#{gender})
    </insert>

    <!--
	获取非自增主键的值：
		Oracle不支持自增；Oracle使用序列来模拟自增；
		每次插入的数据的主键是从序列中拿到的值；如何获取到这个值；
	 -->
    <insert id="addEmp" databaseId="oracle">
        <!--
        keyProperty:查出的主键值封装给javaBean的哪个属性
        order="BEFORE":当前sql在插入sql之前运行
               AFTER：当前sql在插入sql之后运行
        resultType:查出的数据的返回值类型

        BEFORE运行顺序：
            先运行selectKey查询id的sql；查出id值封装给javaBean的id属性
            在运行插入的sql；就可以取出id属性对应的值
        AFTER运行顺序：
            先运行插入的sql（从序列中取出新值作为id）；
            再运行selectKey查询id的sql；
         -->
        <selectKey keyProperty="id" order="BEFORE" resultType="Integer">
            <!-- 编写查询主键的sql语句 -->
            <!-- BEFORE-->
            select EMPLOYEES_SEQ.nextval from dual
            <!-- AFTER：
             select EMPLOYEES_SEQ.currval from dual -->
        </selectKey>

        <!-- 插入时的主键是从序列中拿到的 -->
        <!-- BEFORE:-->
        insert into employees(EMPLOYEE_ID,LAST_NAME,EMAIL)
        values(#{id},#{lastName},#{email<!-- ,jdbcType=NULL -->})
        <!-- AFTER：
        insert into employees(EMPLOYEE_ID,LAST_NAME,EMAIL)
        values(employees_seq.nextval,#{lastName},#{email}) -->
    </insert>


    <!--public void updateEmp(Employee employee);-->
    <update id="updateEmp">
        update tbl_employee
          set last_name=#{lastName},email=#{email},gender=#{gender}
          where id=#{id}
    </update>

    <!--public void deleteEmpById(Integer id);-->
    <delete id="deleteEmpById">
        delete from tbl_employee where id=#{id}
    </delete>

    <!--多个查询条件参数查询-->
    <!--public Employee getEmpByIdAndLastName(Integer id,String lastName);-->
    <!--<select id="getEmpByIdAndLastName" resultType="com.atguigu.mybatis.bean.Employee">
        select id,last_name lastName,email,gender from tbl_employee where id = #{param1} AND last_name=#{param2}
    </select>-->
    <select id="getEmpByIdAndLastName" resultType="com.atguigu.mybatis.bean.Employee">
        select id,last_name lastName,email,gender from tbl_employee where id = #{id} AND last_name=#{lastName}
    </select>
    <!--多个查询条件参数查询,参数封装成map-->
    <!--public  Employee getEmpByMap(Map<String,Object> map);-->
    <select id="getEmpByMap" resultType="com.atguigu.mybatis.bean.Employee">
        select id,last_name lastName,email,gender from tbl_employee where id = #{id} AND last_name=#{lastName}
    </select>

    <!--根据员工姓名查询，结果封装到list集合-->
    <!--public List<Employee> getEmpByLastName(String lastName);-->
    <select id="getEmpByLastName" resultType="com.atguigu.mybatis.bean.Employee">
        select * from tbl_employee where last_name like #{lastName}
    </select>

    <!--根据员工id查询，结果集封装到map,key就是列名，值就是对应的值-->
    <!--public Map<String,Object> getEmpByIdReturnMap(Integer id);-->
    <select id="getEmpByIdReturnMap" resultType="map">
        select * from tbl_employee where id=#{id}
    </select>

    <!--多条记录封装一个map：Map<Integer,Employee>:键是这条记录的主键，值是记录封装后的javaBean-->
    <!--public Map<Integer,Employee> getEmpByLastNameReturnMap(String lastName);-->
    <select id="getEmpByLastNameReturnMap" resultType="com.atguigu.mybatis.bean.Employee">
        select * from tbl_employee where last_name like #{lastName}
    </select>

</mapper>
